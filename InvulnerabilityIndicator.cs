using Modding;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UObject = UnityEngine.Object;

namespace InvulnerabilityIndicator {
    public class InvulnerabilityIndicator : Mod {
        internal static InvulnerabilityIndicator instance;
        internal static bool assigned = false;

        public InvulnerabilityIndicator() : base("Invulnerability Indicator") {
           instance = this;
        }

        public override void Initialize(Dictionary<string, Dictionary<string, GameObject>> preloadedObjects) {
            ModHooks.HeroUpdateHook += addIndicator;
        }

        public override string GetVersion() => GetType().Assembly.GetName().Version.ToString();

        public void Unload() {
            ModHooks.HeroUpdateHook -= addIndicator;
        }

        private static void addIndicator() {
            if (!assigned) {
                GameObject.Find("Knight").AddComponent<Indicator>();
                assigned = true;
            }
        }
    }
}